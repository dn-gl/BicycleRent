// <auto-generated />
using System;
using BicycleRent.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BicycleRent.DAL.Migrations
{
    [DbContext(typeof(BicycleRentDbContext))]
    partial class BicycleRentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BicycleRent.DAL.Entities.Bicycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("RentalStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Bicycles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1db4814-b2a4-4ddf-bdb3-4d43845d0fe7"),
                            Name = "Ardis Santana",
                            Price = 10.99,
                            RentalStatus = true,
                            TypeId = new Guid("3f286884-1ffe-41cb-8838-a07737192bb9")
                        },
                        new
                        {
                            Id = new Guid("41c58b30-7a13-4bcd-9ad0-715ce3c91f2b"),
                            Name = "Orbea Vector",
                            Price = 15.99,
                            RentalStatus = true,
                            TypeId = new Guid("3f286884-1ffe-41cb-8838-a07737192bb9")
                        },
                        new
                        {
                            Id = new Guid("cdce4728-5705-4237-aca1-ed69b7114cd9"),
                            Name = "Crossride Shark",
                            Price = 10.99,
                            RentalStatus = true,
                            TypeId = new Guid("d35fbd03-d7d1-4f71-8b53-493225edf6f7")
                        },
                        new
                        {
                            Id = new Guid("e50fcbd6-16fb-4c0d-8992-97d158415e49"),
                            Name = "Ghost Tacana",
                            Price = 8.5,
                            RentalStatus = true,
                            TypeId = new Guid("d35fbd03-d7d1-4f71-8b53-493225edf6f7")
                        },
                        new
                        {
                            Id = new Guid("fa1975b7-6ae4-4be0-8a40-e39fa4d0c999"),
                            Name = "Corrado Namitoa",
                            Price = 13.5,
                            RentalStatus = true,
                            TypeId = new Guid("d35fbd03-d7d1-4f71-8b53-493225edf6f7")
                        },
                        new
                        {
                            Id = new Guid("2f1cd1e2-125d-4d3c-99da-68e98c54b2c1"),
                            Name = "Vento Monte",
                            Price = 9.5,
                            RentalStatus = true,
                            TypeId = new Guid("d35fbd03-d7d1-4f71-8b53-493225edf6f7")
                        },
                        new
                        {
                            Id = new Guid("40c9533b-9742-4c72-9967-7919d8518606"),
                            Name = "Bergamont Helix",
                            Price = 10.5,
                            RentalStatus = true,
                            TypeId = new Guid("261d18cb-21b1-4961-8fc7-5d20b7f70e66")
                        },
                        new
                        {
                            Id = new Guid("af5152e0-f63a-4d49-b46d-8eea296ba3e2"),
                            Name = "Author Compact",
                            Price = 10.99,
                            RentalStatus = true,
                            TypeId = new Guid("261d18cb-21b1-4961-8fc7-5d20b7f70e66")
                        },
                        new
                        {
                            Id = new Guid("b4258eeb-bc93-4ed9-899c-148bd3e20c3f"),
                            Name = "TRINX Tempo",
                            Price = 9.9900000000000002,
                            RentalStatus = true,
                            TypeId = new Guid("069d192a-6086-4c1a-8e03-a98a6184a9ea")
                        },
                        new
                        {
                            Id = new Guid("548f4050-1e4c-4e75-bb6f-2f9ac16c7efe"),
                            Name = "Orbea Avant",
                            Price = 14.5,
                            RentalStatus = true,
                            TypeId = new Guid("069d192a-6086-4c1a-8e03-a98a6184a9ea")
                        },
                        new
                        {
                            Id = new Guid("96e8406d-e8f5-46c6-9e39-2581ec8ac5be"),
                            Name = "Bergamont PRIME",
                            Price = 16.989999999999998,
                            RentalStatus = true,
                            TypeId = new Guid("069d192a-6086-4c1a-8e03-a98a6184a9ea")
                        });
                });

            modelBuilder.Entity("BicycleRent.DAL.Entities.BicycleType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = new Guid("069d192a-6086-4c1a-8e03-a98a6184a9ea"),
                            Name = "Road"
                        },
                        new
                        {
                            Id = new Guid("3f286884-1ffe-41cb-8838-a07737192bb9"),
                            Name = "City"
                        },
                        new
                        {
                            Id = new Guid("261d18cb-21b1-4961-8fc7-5d20b7f70e66"),
                            Name = "Hybrid"
                        },
                        new
                        {
                            Id = new Guid("d35fbd03-d7d1-4f71-8b53-493225edf6f7"),
                            Name = "Mountain"
                        });
                });

            modelBuilder.Entity("BicycleRent.DAL.Entities.Bicycle", b =>
                {
                    b.HasOne("BicycleRent.DAL.Entities.BicycleType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
